# Unrelated Component Communication (via  singleton js library(pubSub pattern) )

1.  there is no relation betweenn both component but sharing the same Page 
    publisherComponent
    listenerComponent

2.  publisherComponent is the component where student i/p will be taken and onclick of submit button 
    enterd data will be displayed by listener Component (via pubsub pattern)
    
3.  steps to be follow by both component to Communicate 
    3.1.  publisherComponent
        
                       fire event is a mehtod of pubsub which will fire the event 
                       and push the event in singleton Library so that anyanother Component 
                       can subscribe and listen the same 
                       Steps to push the event in singleton library 
         
         3.1.1  Create the event 

           syntax to Create an event 
           const EventCreatedName  =new CustomEvent();

          3.1.2  dispatch the event 
   
           syntax to dispatch the event 
           this.dispatchEvent(EventCreatedName);


          3.1.3  fire the event by using fireEvent Mehthod and Pass the required Parameter 
    
             syantax to fire an event 
             1st param -->Page reference 
             2nd param -->fired event name 
             3rd param --->Data /Payload 
             fireEvent(this.pageRef,'pubsubtileclicked',this.valuetoSend);

       Note : --To get the Page reference first import the required mehtod 
                from the pubSub module 
                to get the fireEvent first import the the required mehtod from 
                the the Pubsub module 
     3.2.  listnerComponent 
                Event was pushed by another Component into the PubSub
                Now listener will subscribe and listen for the changes 
  
       3.2.1   import  registerListener mehtod from Pubsub
               so by using this mehtod  listener can subscribe for the event 
               Register for the listener will be done in the connectedcallBack() mehtod 
               so that at the time of component initialization registration of event by listener 
               is done 
    
               syntax to register :-->
               1st Param : eventName Which listener want to subscribe 
               2nd param : handler when listerner listen the changes 
               3rd Param : current Object 
               registerListener('eventName',this.handlerMehtod,this);


     
     

    
 




